---
import type { GitHubRepo } from '../utils/github'
import Badge from './Badge.astro'
import { Icon } from 'astro-icon/components'

interface Props {
  repo?: GitHubRepo
  href?: string
  title: string
  description?: string
  isPreview?: boolean
}

function formatRepoName(name: string): string {
  return name
    .split('-')
    .map((word) => word.charAt(0).toUpperCase() + word.slice(1))
    .join(' ')
}

const { href, title, description, repo, isPreview = false } = Astro.props
const formattedTitle = repo ? formatRepoName(repo.name) : title
---

{
  isPreview ? (
    <div class="project-card preview">
      <div class="project-card__content">
        <div class="project-card__inner">
          <h3>{title}</h3>
          <p>{description || <slot />}</p>
        </div>
      </div>
    </div>
  ) : (
    <a href={href} class="project-card">
      <div class="project-card__content">
        <div class="project-card__inner">
          <h3 lang="en">{formattedTitle}</h3>
          <div class="project-card__badges">
            <Badge variant="primary" lang="en">
              Free
            </Badge>
            <Badge variant="secondary" lang="en">
              Open Source
            </Badge>
          </div>
          <p>{description || repo?.description}</p>
        </div>
        {repo && (
          <div
            class="project-card__stats"
            aria-label={
              Astro.currentLocale === 'nl' ? 'Repository statistieken' : 'Repository statistics'
            }
          >
            <div class="project-card__stat">
              <Icon name="mdi:star" size="24" />
              <span class="sr-only">{Astro.currentLocale === 'nl' ? 'Sterren' : 'Stars'}</span>
              <span>{repo.stargazers_count}</span>
            </div>
            <div class="project-card__stat">
              <Icon name="mdi:source-fork" size="24" />
              <span class="sr-only">{Astro.currentLocale === 'nl' ? 'Forks' : 'Forks'}</span>
              <span>{repo.forks_count}</span>
            </div>
          </div>
        )}
      </div>
      <slot />
      <pixel-canvas data-gap="8" data-speed="35" data-colors="cyan, purple, orange" />
    </a>
  )
}

<script>
  import '../assets/scripts/pixel-canvas.js'
</script>

<style lang="scss">
  .project-card {
    --color-background-hsl: 220 26% 14%;

    display: flex;
    position: relative;
    flex-direction: column;
    transition: all var(--animation-speed-fast) var(--cubic-bezier);
    cursor: pointer;
    box-shadow: var(--elevation-3);
    border-radius: var(--radius-m);
    isolation: isolate;
    padding: var(--space-l);
    min-block-size: 250px;
    color: inherit;
    text-decoration: none;

    &:where(:hover, :focus-visible) {
      translate: 0 -0.5rem;
      rotate: 1deg;
      box-shadow: var(--elevation-5);

      &::after {
        opacity: 0.7;
      }
    }

    &::before {
      position: absolute;
      z-index: 1;
      inset: 0;
      content: '';
    }

    :global(pixel-canvas) {
      position: absolute;
      opacity: 0;
      z-index: -1;
      transition: opacity 0.2s ease;
      inset: 0;
      border-radius: inherit;
    }

    &:where(:hover, :focus-within) :global(pixel-canvas) {
      opacity: 1;
    }

    &::after {
      position: absolute;
      z-index: 1;
      inset: 0;
      border-radius: inherit;
      background-image: linear-gradient(
        to bottom,
        hsl(var(--color-background-hsl) / 95%),
        hsl(var(--color-background-hsl) / 85%)
      );
      content: '';
    }

    &__badges {
      display: flex;
      gap: var(--space-2xs);
      margin-block-start: var(--space-s);
    }

    // Preview card
    &.preview {
      --color-background-hsl: 220 26% 30%;

      justify-content: center;
      cursor: default;

      &::after {
        opacity: 0.5;
      }

      &:where(:hover, :focus-visible) {
        translate: none;
        rotate: none;
        box-shadow: var(--elevation-3);

        &::after {
          opacity: 0.5;
        }
      }

      &:hover :global(pixel-canvas) {
        opacity: 0;
      }
    }
  }

  .project-card__content {
    display: flex;
    position: relative;
    flex: 1;
    flex-direction: column;
    justify-content: space-between;
    align-items: flex-start;
    z-index: 2;
    text-shadow: 0 1px 2px hsl(var(--color-background-hsl) / 100%);

    h3 {
      margin: 0;
      font-weight: 700;
      font-size: var(--font-size-2);
      line-height: 1.4;
    }

    p {
      margin-block: var(--space-s) 0;
      font-weight: 300;
      font-size: var(--font-size-1);
      line-height: 1.5;
    }
  }

  .project-card__stats {
    display: flex;
    gap: var(--space-xs);
    margin-block-start: var(--space-m);
  }

  .project-card__stat {
    display: flex;
    align-items: center;
    gap: var(--space-2xs);
    color: var(--color-text-offset);
  }
</style>
